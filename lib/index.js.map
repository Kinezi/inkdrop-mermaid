{"version":3,"sources":["../src/index.js"],"names":["Mermaid","React","Component","constructor","props","mermaidId","Math","random","toString","replace","substr","state","svg","error","componentDidMount","renderDiagram","children","componentDidUpdate","prevProps","componentWillUnmount","cleanupMermaidDiv","shouldComponentUpdate","nextProps","nextState","render","console","log","__html","message","code","mermaidAPI","setState","e","el","document","querySelector","remove","el2","PropTypes","arrayOf","string","module","exports","config","theme","title","type","activate","initialize","startOnLoad","inkdrop","get","markdownRenderer","remarkCodeComponents","mermaid","deactivate"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport * as React from 'react'\nimport { mermaidAPI } from 'mermaid'\nimport { markdownRenderer } from 'inkdrop'\n\nclass Mermaid extends React.Component {\n  static propTypes = {\n    children: PropTypes.arrayOf(PropTypes.string)\n  }\n\n  constructor(props) {\n    super(props)\n    this.mermaidId =\n      'mermaid-' +\n      Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, '')\n        .substr(0, 5)\n    this.state = { svg: '', error: null }\n  }\n  componentDidMount() {\n    this.renderDiagram(this.props.children[0])\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.children[0] !== this.props.children[0]) {\n      this.renderDiagram(this.props.children[0])\n    }\n  }\n  componentWillUnmount() {\n    this.cleanupMermaidDiv()\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.children[0] !== this.props.children[0] ||\n      nextState.svg !== this.state.svg ||\n      nextState.error !== this.state.error\n    )\n  }\n  render() {\n    const { error } = this.state\n    console.log('MERMAID: render error', error)\n\n    return (\n      <div className=\"mermaid-diagram\">\n        <div dangerouslySetInnerHTML={{ __html: this.state.svg }} />\n        {error && (\n          <div className=\"ui error message\">\n            <div className=\"header\">Failed to render Marmaid</div>\n            <div>\n              <pre>{error.message}</pre>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n  renderDiagram(code) {\n    try {\n      this.cleanupMermaidDiv()\n      mermaidAPI.render(this.mermaidId, code, svg =>\n        this.setState({ svg, error: null })\n      )\n    } catch (e) {\n      this.setState({ error: e, svg: '' })\n    }\n  }\n  cleanupMermaidDiv() {\n    const el = document.querySelector(`#${this.mermaidId}`)\n    if (el) el.remove()\n    const el2 = document.querySelector(`#d${this.mermaidId}`)\n    if (el2) el2.remove()\n  }\n}\n\nmodule.exports = {\n  config: {\n    theme: {\n      title: 'Theme',\n      type: 'string',\n      default: 'forest'\n    }\n  },\n\n  activate() {\n    mermaidAPI.initialize({\n      startOnLoad: false,\n      theme: inkdrop.config.get('mermaid.theme')\n    })\n\n    if (markdownRenderer) {\n      markdownRenderer.remarkCodeComponents.mermaid = Mermaid\n    }\n  },\n\n  deactivate() {\n    if (markdownRenderer) {\n      markdownRenderer.remarkCodeComponents.mermaid = null\n    }\n  }\n}\n"],"file":"index.js"}