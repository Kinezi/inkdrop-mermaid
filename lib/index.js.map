{"version":3,"sources":["../src/index.js"],"names":["Mermaid","React","Component","constructor","props","mermaidId","Math","random","toString","replace","substr","state","svg","componentDidMount","renderDiagram","children","componentDidUpdate","prevProps","componentWillUnmount","cleanupMermaidDiv","shouldComponentUpdate","nextProps","nextState","render","__html","code","mermaidAPI","setState","el","document","querySelector","remove","PropTypes","arrayOf","string","module","exports","config","theme","title","type","default","activate","initialize","startOnLoad","inkdrop","get","markdownRenderer","remarkCodeComponents","mermaid","deactivate"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,OAAN,SAAsBC,KAAK,CAACC,SAA5B,CAAsC;AAKpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiBC,IAAI,CAACC,MAAL,GACdC,QADc,CACL,EADK,EAEdC,OAFc,CAEN,UAFM,EAEM,EAFN,EAGdC,MAHc,CAGP,CAHO,EAGJ,CAHI,CAAjB;AAIA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAb;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,aAAL,CAAmB,KAAKV,KAAL,CAAWW,QAAX,CAAoB,CAApB,CAAnB;AACD;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACF,QAAV,CAAmB,CAAnB,MAA0B,KAAKX,KAAL,CAAWW,QAAX,CAAoB,CAApB,CAA9B,EAAsD;AACpD,WAAKD,aAAL,CAAmB,KAAKV,KAAL,CAAWW,QAAX,CAAoB,CAApB,CAAnB;AACD;AACF;;AACDG,EAAAA,oBAAoB,GAAG;AACrB,SAAKC,iBAAL;AACD;;AACDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C,WACED,SAAS,CAACN,QAAV,CAAmB,CAAnB,MAA0B,KAAKX,KAAL,CAAWW,QAAX,CAAoB,CAApB,CAA1B,IACAO,SAAS,CAACV,GAAV,KAAkB,KAAKD,KAAL,CAAWC,GAF/B;AAID;;AACDW,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAE,KAAKb,KAAL,CAAWC;AAArB;AAF3B,MADF;AAMD;;AACDE,EAAAA,aAAa,CAACW,IAAD,EAAO;AAClB,SAAKN,iBAAL;;AACAO,wBAAWH,MAAX,CAAkB,KAAKlB,SAAvB,EAAkCoB,IAAlC,EAAwCb,GAAG,IAAI,KAAKe,QAAL,CAAc;AAAEf,MAAAA;AAAF,KAAd,CAA/C;AACD;;AACDO,EAAAA,iBAAiB,GAAG;AAClB,UAAMS,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAwB,IAAG,KAAKzB,SAAU,EAA1C,CAAX;AACA,QAAIuB,EAAJ,EAAQA,EAAE,CAACG,MAAH;AACT;;AA7CmC;;gBAAhC/B,O,eACe;AACjBe,EAAAA,QAAQ,EAAEiB,mBAAUC,OAAV,CAAkBD,mBAAUE,MAA5B;AADO,C;;AA+CrBC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,OADF;AAELC,MAAAA,IAAI,EAAE,QAFD;AAGLC,MAAAA,OAAO,EAAE;AAHJ;AADD,GADO;;AASfC,EAAAA,QAAQ,GAAG;AACThB,wBAAWiB,UAAX,CAAsB;AACpBC,MAAAA,WAAW,EAAE,KADO;AAEpBN,MAAAA,KAAK,EAAEO,OAAO,CAACR,MAAR,CAAeS,GAAf,CAAmB,eAAnB;AAFa,KAAtB;;AAKA,QAAIC,yBAAJ,EAAsB;AACpBA,gCAAiBC,oBAAjB,CAAsCC,OAAtC,GAAgDjD,OAAhD;AACD;AACF,GAlBc;;AAoBfkD,EAAAA,UAAU,GAAG;AACX,QAAIH,yBAAJ,EAAsB;AACpBA,gCAAiBC,oBAAjB,CAAsCC,OAAtC,GAAgD,IAAhD;AACD;AACF;;AAxBc,CAAjB","sourcesContent":["import PropTypes from 'prop-types'\nimport * as React from 'react'\nimport { mermaidAPI } from 'mermaid'\nimport { markdownRenderer } from 'inkdrop'\n\nclass Mermaid extends React.Component {\n  static propTypes = {\n    children: PropTypes.arrayOf(PropTypes.string)\n  }\n\n  constructor(props) {\n    super(props)\n    this.mermaidId = Math.random()\n      .toString(36)\n      .replace(/[^a-z]+/g, '')\n      .substr(0, 5)\n    this.state = { svg: '' }\n  }\n  componentDidMount() {\n    this.renderDiagram(this.props.children[0])\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.children[0] !== this.props.children[0]) {\n      this.renderDiagram(this.props.children[0])\n    }\n  }\n  componentWillUnmount() {\n    this.cleanupMermaidDiv()\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.children[0] !== this.props.children[0] ||\n      nextState.svg !== this.state.svg\n    )\n  }\n  render() {\n    return (\n      <div\n        className=\"mermaid-diagram\"\n        dangerouslySetInnerHTML={{ __html: this.state.svg }}\n      />\n    )\n  }\n  renderDiagram(code) {\n    this.cleanupMermaidDiv()\n    mermaidAPI.render(this.mermaidId, code, svg => this.setState({ svg }))\n  }\n  cleanupMermaidDiv() {\n    const el = document.querySelector(`#${this.mermaidId}`)\n    if (el) el.remove()\n  }\n}\n\nmodule.exports = {\n  config: {\n    theme: {\n      title: 'Theme',\n      type: 'string',\n      default: 'forest'\n    }\n  },\n\n  activate() {\n    mermaidAPI.initialize({\n      startOnLoad: false,\n      theme: inkdrop.config.get('mermaid.theme')\n    })\n\n    if (markdownRenderer) {\n      markdownRenderer.remarkCodeComponents.mermaid = Mermaid\n    }\n  },\n\n  deactivate() {\n    if (markdownRenderer) {\n      markdownRenderer.remarkCodeComponents.mermaid = null\n    }\n  }\n}\n"],"file":"index.js"}